#include "AdamMatrix.h"

#include <iostream>



int main()
{
	//parse matrix from input
	size_t a[] = { 0b100000000000110001110101, 0b010000000000011000111011, 0b001000000000111101101001, 0b000100000000011110110101, 0b000010000000001111011011, 0b000001000000110110011001, 0b000000100000011011001101, 0b000000010000001101100111, 0b000000001000110111000111, 0b000000000100101010010111, 0b000000000010100100111111, 0b000000000001100011101011 };

	size_t b[] = { 0b100000000000011100100111, 0b010000000000101010010111, 0b001000000000110001001111, 0b000100000000111011100100, 0b000010000000111101010010, 0b000001000000111110001001, 0b000000100000100111011100, 0b000000010000010111101010, 0b000000001000001111110001, 0b000000000100100100111011, 0b000000000010010010111101, 0b000000000001001001111110 };

	adam::matrix<12> matrixA(a), matrixB(b);



	std::vector<size_t> result = matrixB.getSubset(0b11111 << (24 - 5));

	for (size_t i = 0; i < result.size(); i++)
		std::cout << std::bitset<24>(result[i]) << std::endl;



	//check if two matricies share sapn
	return 0;
}